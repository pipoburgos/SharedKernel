name: Shared Kernel CI

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Setup .NET 8.0
        uses: actions/setup-dotnet@v4.1.0
        with:
          dotnet-version: '8.0.x'
          
      - name: Setup .NET 9.0
        uses: actions/setup-dotnet@v4.1.0
        with:
          dotnet-version: '9.0.x'

      - name: Start Docker Compose Infrastructure
        run: docker compose -f ./test/Infrastructure/docker-compose.yml up -d

      - name: Start Docker Compose BankAccounts
        run: docker compose -f ./samples/BankAccounts/tests/BankAccounts.Acceptance.Tests/docker-compose.yml up -d

      - name: Install dependencies
        run: dotnet restore ./SharedKernel.sln

      - name: Build
        run: dotnet build --configuration Release --no-restore --verbosity normal ./SharedKernel.sln

      - name: Test
        run: dotnet test --configuration Release --no-build --no-restore --verbosity normal ./SharedKernel.sln

      - name: Pack
        run: dotnet pack --configuration Release --no-restore -ignore:.sln,.dcproj ./SharedKernel.sln

      - name: Install xmllint
        run: sudo apt-get update && sudo apt-get install -y libxml2-utils

      - name: Get version from Directory.Build.props
        id: get_version
        run: |
          VERSION=$(xmllint --xpath "string(//Version)" ./src/Directory.Build.props)
          echo "Version found: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Check if tag already exists
        id: check_tag
        run: |
          TAG_EXISTS=$(git ls-remote --tags origin refs/tags/v${{ steps.get_version.outputs.version }})
          if [ -n "$TAG_EXISTS" ]; then
            echo "Tag already exists. Exiting."
            exit 0
          fi

      - name: Create Git tag
        if: steps.check_tag.outputs.exists == 'false'
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag v${{ steps.get_version.outputs.version }}
          git push origin v${{ steps.get_version.outputs.version }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          name: Release v${{ steps.get_version.outputs.version }}
          draft: false
          prerelease: false

      - name: Prep packages
        run: dotnet nuget add source --username pipoburgos --password ${{ secrets.NUGET_PASSWORD }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/pipoburgos/index.json"
        
      - name: Publish to GitHub packages
        run: dotnet nuget push src/*/bin/Release/*.nupkg --api-key ${{ secrets.API_KEY }} --source "https://api.nuget.org/v3/index.json" --skip-duplicate
