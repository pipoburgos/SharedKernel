name: Shared Kernel CI

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Setup .NET 8.0
        uses: actions/setup-dotnet@v4.1.0
        with:
          dotnet-version: '8.0.x'

      - name: Setup .NET 9.0
        uses: actions/setup-dotnet@v4.1.0
        with:
          dotnet-version: '9.0.x'

      - name: Install dependencies
        run: dotnet restore ./SharedKernel.sln

      - name: Build
        run: dotnet build --configuration Release --no-restore --verbosity normal ./SharedKernel.sln

      - name: Start docker test containers
        if: runner.os == 'Linux'
        run: |
          docker compose -f ./test/Infrastructure/docker-compose.yml up -d
          docker compose -f ./samples/BankAccounts/tests/BankAccounts.Acceptance.Tests/docker-compose.yml up -d

      - name: Test
        if: runner.os == 'Linux'
        run: dotnet test --configuration Release --no-build --no-restore --verbosity normal ./SharedKernel.sln

      - name: Pack
        if: runner.os == 'Linux'
        run: dotnet pack --configuration Release --no-restore -ignore:.sln,.dcproj ./SharedKernel.sln

      - name: Prepare artifact folder
        if: runner.os == 'Linux'
        run: |
          mkdir -p packages
          mkdir -p version
          cp src/*/bin/Release/*.nupkg packages/
          cp src/Directory.Build.props version/

      - name: Upload packages
        if: runner.os == 'Linux'
        uses: actions/upload-artifact@v4
        with:
          name: nuget-packages
          path: |
              packages/
              version/


  release:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: success()

    steps:

      - name: Download packages
        uses: actions/download-artifact@v4
        with:
          name: nuget-packages
          path: .

      - name: Get version from Directory.Build.props
        id: get_version
        shell: pwsh
        run: |
          [xml]$xml = Get-Content ./version/Directory.Build.props
          $version = $xml.Project.PropertyGroup.Version
          echo "version=$version" >> $env:GITHUB_OUTPUT

      - name: Setup Git remote only
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0
          no-checkout: true

      - name: Check if tag already exists
        id: check_tag
        shell: bash
        run: |
          TAG_EXISTS=$(git ls-remote --tags origin refs/tags/v${{ steps.get_version.outputs.version }})
          if [ -n "$TAG_EXISTS" ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Create Git tag
        if: steps.check_tag.outputs.exists == 'false'
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag v${{ steps.get_version.outputs.version }}
          git push origin v${{ steps.get_version.outputs.version }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.get_version.outputs.version }}
          name: Release v${{ steps.get_version.outputs.version }}
          draft: false
          prerelease: false

      - name: Setup .NET 9.0
        uses: actions/setup-dotnet@v4.1.0
        with:
          dotnet-version: '9.0.x'

      - name: Prep packages
        run: dotnet nuget add source --username pipoburgos --password ${{ secrets.NUGET_PASSWORD }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/pipoburgos/index.json"

      - name: Publish to NuGet
        run: dotnet nuget push packages/*.nupkg --api-key ${{ secrets.API_KEY }} --source "https://api.nuget.org/v3/index.json" --skip-duplicate

      - name: Publish to GitHub
        run: dotnet nuget push packages/*.nupkg --api-key ${{ secrets.GITHUB_TOKEN }} --source "github" --skip-duplicate
